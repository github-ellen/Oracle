DROP TABLE CATE;
DROP TABLE PUBLI;
DROP TABLE BOOK;
DROP TABLE B_SALES;


CREATE TABLE CATE(
C_CODE CHAR(3),
C_NAME VARCHAR2(50),
CONSTRAINT C_PK PRIMARY KEY(C_CODE)
);

INSERT INTO CATE VALUES('C01', 'IT 프로그래밍');
INSERT INTO CATE VALUES('C02', '요리');
INSERT INTO CATE VALUES('C03', '예술');
INSERT INTO CATE VALUES('C04', 'DB');


ROLLBACK;

SELECT * FROM CATE;


CREATE TABLE PUBLI(
P_NAME VARCHAR2(50),
P_ADDRESS VARCHAR2(100),
P_TEL NUMBER(11),
CONSTRAINT P_PK PRIMARY KEY(P_NAME)
);

INSERT INTO PUBLI VALUES('국제 출판사', '서울 강남구', 07022225555);
INSERT INTO PUBLI VALUES('해피 출판사', '부산 해운대구', 01033331234);
INSERT INTO PUBLI VALUES('삼성 출판사', '서울 서초구', 023137777);
INSERT INTO PUBLI VALUES('길벗', '서울 마포구', 0708205482);
INSERT INTO PUBLI VALUES('이지스 퍼블리싱', '경기 고양시 일산동구', 0315415761);




ROLLBACK;

SELECT * FROM PUBLI;

CREATE TABLE BOOK(
B_CODE CHAR(20),
B_NAME VARCHAR2(100) NOT NULL,
C_CODE CHAR(3),
P_NAME VARCHAR2(50),
B_PRICE NUMBER(6) NOT NULL,
B_REGDATE DATE DEFAULT SYSDATE,
CONSTRAINT B_PK PRIMARY KEY (B_CODE)
);

ALTER TABLE BOOK
                ADD CONSTRAINT B_FK_CCODE FOREIGN KEY (C_CODE) REFERENCES CATE(C_CODE);
ALTER TABLE BOOK
                ADD CONSTRAINT B_FK_PNAME FOREIGN KEY (P_NAME) REFERENCES PUBLI(P_NAME);
                

SELECT * FROM BOOK;

INSERT INTO BOOK (B_CODE, B_NAME, C_CODE, P_NAME, B_PRICE) VALUES('C-01-A-777', '자바 입문','C01', '국제 출판사',15000);
INSERT INTO BOOK (B_CODE, B_NAME, C_CODE, P_NAME, B_PRICE) VALUES('C-02-B-123', '즐거운 오라클','C02', '해피 출판사',28000);
INSERT INTO BOOK (B_CODE, B_NAME, C_CODE, P_NAME, B_PRICE) VALUES('C-03-C-515', '아기 상어','C03', '삼성 출판사',20000);
INSERT INTO BOOK (B_CODE, B_NAME, C_CODE, P_NAME, B_PRICE) VALUES('C-04-D-111', '오라클 SQL','C04', '길벗',28000);


CREATE TABLE B_SALES(
SEQ NUMBER(3),
SALESDATE CHAR(10) NOT NULL,
B_CODE CHAR(20),
B_NAME VARCHAR2(100) NOT NULL,
QTY NUMBER(3),
DISCOUNT NUMBER(2),
AMOUNT NUMBER(6) NOT NULL,
REGDATE DATE DEFAULT SYSDATE
);


SELECT * FROM B_SALES;

ALTER TABLE B_SALES
                ADD CONSTRAINT S_PK PRIMARY KEY (SEQ);
                
ALTER TABLE B_SALES
                ADD CONSTRAINT S_FK_BCODE FOREIGN KEY (B_CODE) REFERENCES BOOK(B_CODE);

INSERT INTO B_SALES (SEQ, SALESDATE, B_CODE, B_NAME, QTY, DISCOUNT, AMOUNT) VALUES(S_SEQ.NEXTVAL, '2021-04-30', 'C-01-A-777', '자바 입문', 5, 10, 67500);
INSERT INTO B_SALES (SEQ, SALESDATE, B_CODE, B_NAME, QTY, DISCOUNT, AMOUNT) VALUES(S_SEQ.NEXTVAL, '2021-04-30', 'C-02-B-123', '즐거운 오라클', 2, 5, 53200);
INSERT INTO B_SALES (SEQ, SALESDATE, B_CODE, B_NAME, QTY, DISCOUNT, AMOUNT) VALUES(S_SEQ.NEXTVAL, '2021-05-01', 'C-03-C-515', '아기 상어', 2, 0, 40000);
INSERT INTO B_SALES (SEQ, SALESDATE, B_CODE, B_NAME, QTY, DISCOUNT, AMOUNT) VALUES(S_SEQ.NEXTVAL, '2021-05-01', 'C-01-A-777', '자바 입문', 1, 10, 13500);
INSERT INTO B_SALES (SEQ, SALESDATE, B_CODE, B_NAME, QTY, DISCOUNT, AMOUNT) VALUES(S_SEQ.NEXTVAL, '2021-05-01', 'C-03-C-515', '아기 상어', 1, 0, 20000);

--SALESDATE에 인덱스 생성하기
CREATE INDEX SALESDATE_IX ON B_SALES(SALESDATE);

SELECT SALESDATE_IX FROM B_SALES;




DROP SEQUENCE S_SEQ;
CREATE SEQUENCE S_SEQ;

--기간안의 매출 조회 리스트
--책코드, 책명, 분류명, 출판사명, 판매 수량, 판매 금액, 판매 날짜
SELECT S.SALESDATE, S.B_CODE, B.B_NAME, C.C_CODE, P.P_NAME, S.QTY, S.AMOUNT
FROM B_SALES S INNER JOIN BOOK B ON (S.B_CODE = B.B_CODE)
JOIN CATE C ON (C.C_CODE = B.C_CODE)
JOIN PUBLI P ON (P.P_NAME = B.P_NAME)
WHERE S.SALESDATE BETWEEN '2021-04-30' AND '2021-04-30';


--책코드의 매출 조회 리스트
--자바 입문의 매출만 보고 싶을 때.
SELECT S.SALESDATE, S.B_CODE, B.B_NAME, C.C_CODE, P.P_NAME, S.QTY, S.AMOUNT
FROM B_SALES S INNER JOIN BOOK B ON (S.B_CODE = B.B_CODE)
JOIN CATE C ON (C.C_CODE = B.C_CODE)
JOIN PUBLI P ON (P.P_NAME = B.P_NAME)
WHERE S.SALESDATE BETWEEN '2021-04-30' AND '2021-04-30'
AND B.B_CODE = 'C-01-A-777';


--일자별 + 책 코드별 매출 조회 집계
--판매 날짜, 책명, 책코드, 판매 수량의 합계, 판매 금액의 합계
SELECT S.SALESDATE, B.B_CODE, B.B_NAME, SUM(S.QTY) QTY, SUM(S.AMOUNT) AMOUNT
FROM B_SALES S INNER JOIN BOOK B ON (S.B_CODE = B.B_CODE)
GROUP BY S.SALESDATE, B.B_CODE, B.B_NAME;


--품목별 매출 합계 집계
SELECT BOOK.B_CODE, BOOK.B_NAME, SUM(SALES.AMOUNT) AMOUNT
FROM BOOK INNER JOIN SALES ON (BOOK.B_CODE = SALES.B_CODE)
GROUP BY BOOK.B_CODE, BOOK.B_NAME;

COMMIT;

--출판사별 매출 조회 집계

DROP VIEW DAYITEM_SALES_VIEW;
