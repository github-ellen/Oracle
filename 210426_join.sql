--조인 : 두 개 이상의 테이블 연결
--LEFT JOIN, RIGHT JOIN, INNER JOIN
select * from COUNTRIES;
select * from REGIONS;

SELECT C.COUNTRY_ID, C.COUNTRY_NAME, R.REGION_NAME
FROM COUNTRIES C INNER join REGIONS R ON( C.REGION_ID = R.REGION_ID ); --이너조인(동등 조인)

--부서 테이블에서 위치 테이블의 시티 조인하여 출력
SELECT * FROM DEPARTMENTS;
SELECT * FROM LOCATIONS;

SELECT D.* , CITY
FROM DEPARTMENTS D INNER JOIN LOCATIONS L ON(D.LOCATION_ID = L.LOCATION_ID); --ON : 조인 조건

--연습문제
--직원 테이블에서 부서 아이디가 IT_PROG인 직원 +직업 테이블의 JOB_TITLE
SELECT EMPLOYEES.*, JOBS.JOB_TITLE
FROM EMPLOYEES INNER JOIN JOBS ON (EMPLOYEES.JOB_ID = JOBS.JOB_ID)
WHERE JOBS.JOB_ID = 'IT_PROG';


--직원 테이블에서 아이디, 이름, 부서 아이디 + 부서 테이블의 부서명
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E INNER JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

--직원 테이블과 부서 테이블의 부서명
--사원 테이블 기준, 부서는 있을 수도 있고 없을 수도 있다. 사원은 부서가 있든 없든 상관없이 조회 => LEFT JOIN
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM EMPLOYEES E LEFT JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE E.EMPLOYEE_ID = 178;

--RIGHT JOIN
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM DEPARTMENTS D LEFT JOIN EMPLOYEES E ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
WHERE E.EMPLOYEE_ID = 178;

--부서 테이블 + 부서 테이블 + 직업 테이블
SELECT E.EMPLOYEE_ID, D.DEPARTMENT_NAME, J.JOB_TITLE
FROM EMPLOYEES E LEFT JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
LEFT JOIN JOBS J ON E.JOB_ID = J.JOB_ID
WHERE E.EMPLOYEE_ID BETWEEN 150 AND 200
ORDER BY E.EMPLOYEE_ID;

select *
from REGIONS;

SELECT EMPLOYEE_ID, FIRST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY >= 10000
ORDER BY SALARY DESC;
